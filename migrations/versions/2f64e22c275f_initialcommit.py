"""initialcommit

Revision ID: 2f64e22c275f
Revises: 
Create Date: 2020-07-13 15:03:54.541204

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2f64e22c275f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('line_1', sa.String(length=100), nullable=True),
    sa.Column('line_2', sa.String(length=100), nullable=True),
    sa.Column('line_3', sa.String(length=100), nullable=True),
    sa.Column('post_code', sa.String(length=100), nullable=True),
    sa.Column('town', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], name=op.f('fk_address_property_id_property')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_address'))
    )
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_blacklist_tokens')),
    sa.UniqueConstraint('token', name=op.f('uq_blacklist_tokens_token'))
    )
    op.create_table('property',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('purchase_price', sa.Float(precision='10, 2'), nullable=True),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.Column('monthly_rental_price', sa.Float(precision='10, 2'), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], name=op.f('fk_property_address_id_address')),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], name=op.f('fk_property_portfolio_id_portfolio')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_property'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('public_id', name=op.f('uq_user_public_id')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    op.create_table('portfolio',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_portfolio_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_portfolio'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('portfolio')
    op.drop_table('user')
    op.drop_table('property')
    op.drop_table('blacklist_tokens')
    op.drop_table('address')
    # ### end Alembic commands ###
